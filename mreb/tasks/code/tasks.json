{
    "tasks": [
        {
            "id": "C-1",
            "category": "coding",
            "question": "Write a function to reverse a string. For example, reversing 'hello' should return 'olleh', and reversing an empty string should return an empty string.",
            "function_template": "def reverse_string(s: str) -> str",
            "test_cases": [
                {"input": "hello", "output": "olleh"},
                {"input": "", "output": ""},
                {"input": "a", "output": "a"},
                {"input": "Python!", "output": "!nohtyP"},
                {"input": "12345", "output": "54321"},
                {"input": "RaceCar", "output": "raCecaR"},
                {"input": "  spaces  ", "output": "  secaps  "},
                {"input": "👍🌍", "output": "🌍👍"},
                {"input": "a b c", "output": "c b a"},
                {"input": "123!@#", "output": "#@!321"}
            ],
            "metadata": {}
        },
        {
            "id": "C-2",
            "category": "coding",
            "question": "Implement a function to compute the factorial of a non-negative integer. For example, factorial(0) should return 1, and factorial(5) should return 120.",
            "function_template": "def factorial(n: int) -> int",
            "test_cases": [
                {"input": 0, "output": 1},
                {"input": 1, "output": 1},
                {"input": 5, "output": 120},
                {"input": 3, "output": 6},
                {"input": 10, "output": 3628800},
                {"input": 2, "output": 2},
                {"input": 4, "output": 24},
                {"input": 7, "output": 5040},
                {"input": 8, "output": 40320},
                {"input": 9, "output": 362880}
            ],
            "metadata": {}
        },
        {
            "id": "C-3",
            "category": "coding",
            "question": "Implement a function to return the nth Fibonacci number (0-based indexing: fib(0)=0, fib(1)=1). For example, fib(5) should return 5, and fib(0) should return 0.",
            "function_template": "def fibonacci(n: int) -> int",
            "test_cases": [
                {"input": 0, "output": 0},
                {"input": 1, "output": 1},
                {"input": 5, "output": 5},
                {"input": 2, "output": 1},
                {"input": 3, "output": 2},
                {"input": 4, "output": 3},
                {"input": 6, "output": 8},
                {"input": 7, "output": 13},
                {"input": 10, "output": 55},
                {"input": 12, "output": 144}
            ],
            "metadata": {}
        },
        {
            "id": "C-4",
            "category": "coding",
            "question": "Determine if a string is a palindrome (ignoring case, spaces, and punctuation). For example, 'racecar' is a palindrome, and 'A man, a plan, a canal: Panama' is also a palindrome.",
            "function_template": "def is_palindrome(s: str) -> bool",
            "test_cases": [
                {"input": "racecar", "output": true},
                {"input": "A man, a plan, a canal: Panama", "output": true},
                {"input": "hello", "output": false},
                {"input": "Was it a car or a cat I saw?", "output": true},
                {"input": "No 'x' in Nixon", "output": true},
                {"input": "12321", "output": true},
                {"input": "Not a palindrome", "output": false},
                {"input": "Madam", "output": true},
                {"input": " ", "output": true},
                {"input": "0_0", "output": true}
            ],
            "metadata": {}
        },
        {
            "id": "C-5",
            "category": "coding",
            "question": "Merge two sorted lists into a single sorted list. For example, merging [1,3,5] and [2,4,6] should return [1,2,3,4,5,6], and merging [] and [2] should return [2].",
            "function_template": "def merge_sorted_lists(list1: list[int], list2: list[int]) -> list[int]",
            "test_cases": [
                {"input": [[1,3,5], [2,4,6]], "output": [1,2,3,4,5,6]},
                {"input": [[], [2]], "output": [2]},
                {"input": [[5], [1,2,3]], "output": [1,2,3,5]},
                {"input": [[], []], "output": []},
                {"input": [[7,8,9], [1,2,3,4]], "output": [1,2,3,4,7,8,9]},
                {"input": [[-1,3,5], [-2,4,6]], "output": [-2,-1,3,4,5,6]},
                {"input": [[2,5,6], [1,4,7]], "output": [1,2,4,5,6,7]},
                {"input": [[10], [2,3,4,5]], "output": [2,3,4,5,10]},
                {"input": [[1,2,3], [4,5,6]], "output": [1,2,3,4,5,6]},
                {"input": [[], [0]], "output": [0]}
            ],
            "metadata": {}
        }
    ]
}